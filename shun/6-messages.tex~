\section{Constraint-Based Request Messages}
\label{sec:request}

We define constraint-based reservation requests as follows.
A request message consists of four components:
\begin{enumerate}
\item{\bf Intention}. The direction in which the vehicle intends to
  move.
\item{\bf Vehicle Type}. The type of the vehicle.
\item{\bf Entry Condition}. The condition under which the vehicle
  will enter the intersection.
\item{\bf Acceleration Profile List}. The schedule of acceleration
  the vehicle plans to use to enter an intersection.
\end{enumerate}

The intention of a vehicle is the direction in which the vehicle wants
to exit from an intersection.  The intention is expressed as an
\emph{intention statement}, which is formally a disjunction of lane
and road identifiers: $(l_1 \vee l_2 \ldots \vee r_1 \vee r_2)$, where
$l_i$ is an exit lane and $r_i$ is an exit road. For every lane $l_i$,
there exists only one $r_j$ such that $l_i \in r_j$. 
Examples of legal intentions are $(l_1 \vee l_3)$ or
$(r_1)$.\footnote{A intention in the form of $r_i \vee r_j$ is also possible,
especially for multiple-intersection management, which involves path
planning. In this case, the vehicle is proposing two directions to go
and the IM will respond with a confirmation message for either one. We
will leave this case for future work.}
This feasibility facilitates different path planning strategies the
vehicle might use.

The vehicle type of a vehicle is the information with which the IM can
determine how the vehicle will move inside an intersection.  Different
types of vehicles have different sizes, shapes, and kinematics.  For
example, the motion of a bus is very different from the motion of a
passenger car.  By knowing the type of the vehicle, the IM will be
able to compute the trajectories of the vehicle under various conditions
such as the arrival times and velocities. We assume the IM maintains
a database of vehicle types.

The entry condition is the condition under which a vehicle enters an
intersection.  An \emph{entry statement} is used to describe the entry
condition. An entry statement consists of three parts: the arrival
lane condition, the arrival time constraint and the arrival velocity
constraint.  An \emph{arrival lane condition} states the possible ways
for the vehicle to enter the intersection.  It is a disjunction of
labels: $(l_1 \vee l_2 \vee \ldots \vee l_n)$ where $l_i$ is a
possible lane from which the vehicle enters the intersection.  An
\emph{arrival time constraint} $[t_1,\ t_2]$ states the time interval
the vehicle will arrive at the intersection.  An \emph{arrival
velocity constraint} $[v_1,\ v_2]$ states that the arrival velocity of
a vehicle is between $v_1$ and $v_2$.  An entry statement is a
$3$-tuple $\langle (l_1 \vee l_2 \vee \ldots \vee l_n), [t_1,\ t_2],
[v_1,\ v_2] \rangle$.

An \emph{acceleration profile} is the schedule of accelerations the
vehicle will use to accelerate through the intersection on a
trajectory. An acceleration profile is a list of pairs $\langle (t_1,
a_1), (t_2, a_2), \ldots, (t_n, a_n) \rangle \in A$, where $A$ denotes
the set of possible acceleration profiles, $a_i$ is the acceleration
the vehicle will use from time $t_i$ until time $t_{t+1}$.  Note that
the vehicle may or may not provide the acceleration profile of all
possible trajectories in a request message.  If the acceleration
profile is missing, the IM will generate an acceleration profile based
on a simulation of the movement of the vehicle given the vehicle type.
The most trivial acceleration profile is one that gives the vehicle
zero acceleration, forcing the vehicle to maintain a constant speed.
Another acceleration profile the IM considers is a constant
acceleration profile.  The IM will consider these acceleration
profiles one by one in order to find one that leads to a successful
reservation.  Ultimately, the reservation includes a required
acceleration profile to be followed by the vehicle once it enters the
intersection.

% For $S = \{l_i : l_i\ is\ an\ possible\ entry\ lane \}$ and $D = \{l_i :
% l_i \in Intention \vee \exists_{r_k
% \in Intention}{(l_i \in r_k)}\}$, the acceleration profile is a
% subset of $S \times D \rightarrow A$.

\noindent
\textbf{Anchor Requests}
We also introduce a new type of reservation requests called anchor
requests, which is used for vehicles whose entry conditions and
trajectories depend on other vehicles.  For example, a vehicle $\veh$
with adaptive cruise control can make an anchor request such as
$Anchor(\vin, d, T)$, which means that $\veh$ will start following
another vehicle with the VIN number $\vin$ at time $T$, and then
maintain a following distance less than or equal to $d$.  The
following distance constraint causes the IM to consider the two
vehicles as being a single, longer vehicle, with no free space between
them.

In their current form, anchor requests are designed specifically for
semi-autonomous vehicles with adaptive cruise control. However, our
formulation is general enough to include other kinds of cooperative maneuver
such as platooning~\cite{bib:Sheikholeslam90Longitudinal}.


% For adaptive cruise control, there is an anchor request (intention, distance)
% - before and after the followed vehicle having reservation
% - but even after the followed vehicle has a reservation, it may break
% the reservation.

% The conditions that has no need to reserve tiles
% before the anchor will break
% - the leader makes a reservation that does not fit the intention of
% the follower.  (the problem is that if it is delayed request, it
% requests cancellation request, which is not good.)
% Thus we need delayed confirmation
% - the leader makes a reservation that is out of the capability of
% the follower. (no reservation is made.)
% - the leader fails to follow the reservation. The vehicle is
% responsible for the detection and then do not enter the intersection.

% If the leader do not make reservation, the follower will not
% rejection.  But it will not have any confirmation either.

% In the case of chaining operation, the confirmation are made in order.



% \subsubsection{The interpretation of Requests}

% % \subsection{The Physical Meaning of Requests}

% Ultimately, the constraint requests the limitation of the
% trajectories of the vehicles. 

% What are the basic variables of a trajectory?r
% - arrival time
% - arrival velocity
% - trajectories 
% - acceleration schedule
% - physical characteristic of the vehicles

% The trajectories are in the form of 
% the boundary of geometric shapes.
% Ultimately, it becomes trajectory bundles. 
% (Maybe we don't deal with it).


% %%%%% Model

% The IM needs to generate the model of a given
% requests.

% What are the set of all possible models?

% Model existence?

% If no model exists, the IM will reject it.

% Let's skip this part first.


% \subsection{New Confirmation Messages}


% IM can return confirmation with a range of trajectories?
% The range determined by the vehicle capacity and the preferences,
% as well as the set of tiles reserved.


% \section{The IM algorithm}

% The objective of the IM is to solve the above constraint system.


% We formulate the IM as a planning problem.

% The objective of the IM algorithm is to generate an acceleration
% profile that satisfies the intention statement, while
% guarantees that there will be no collisions.




%%% Local Variables: 
%%% mode: latex
%%% TeX-master: "main"
%%% End:
